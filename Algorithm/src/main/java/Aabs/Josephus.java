package Aabs;

public class Josephus {
    /*
       问题描述：编号为 1-n 的循环报 1-3，报道 3 的出列，求最后⼀⼈的编号
       标准的约瑟夫环问题。有 n 个⼈围成⼀个圈，从某个⼈开始报数，报到某个特定数字（本题
       中为 3 ）时该⼈出圈，直到只剩下⼀个⼈为⽌。
       解决约瑟夫环问题，可以分两种情况：
       1. 我们要求出最后留下的那个⼈的编号（本题要求）。
       2. 求全过程，即要算出每轮出局的⼈。
       有多种⽅法可以解决约瑟夫环问题，其中⼀种是使⽤递归的⽅式。
       本题的约瑟夫环问题的公式为： (f(n - 1, k) + k - 1) % n + 1 。f(n,k) 表示 n 个⼈报数，每次
       报数报到 k 的⼈出局，最终最后⼀个⼈的编号。
       假设 n 为 10，k 为 3 ，逆推过程如下：
       f(1, 3) = 1（当 n = 1 时，只有⼀个⼈，最后⼀⼈的编号就为 1）；
       f(2,3) =（f(1,3) + 3 -1）%2 + 1 = 3%2 + 1 = 2（当 n = 2 时，最后⼀⼈的编号为 2）；
       f(3,3) = (f(2,3) + 3 - 1))%3 + 1 = 4%3 + 1 = 2（当 n = 3 时，最后⼀⼈的编号为 2）；
       f(4,3) = (f(3,3) + 3 - 1) % 4 + 1 = 4%4 + 1 = 1（当 n = 4 时，最后⼀⼈的编号为 1）；
       ...
       f(10,3) = 3 （当 n = 10 时，最后⼀⼈的编号为 4）；
       这个问题对应剑指 Offer 62. 圆圈中最后剩下的数字 ，两者意思是类似的，⽐较简单
     */











}
